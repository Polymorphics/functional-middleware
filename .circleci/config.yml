version: 2.1

# executors and orbs
executors:
  busybox:
    docker:
      - image: busybox:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
  node:
    docker:
      - image: node:20.5.1-slim
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
  node18:
    docker:
      - image: node:18.19.0-slim
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
  node20:
    docker:
      - image: node:20.11.0-slim
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
  node21:
    docker:
      - image: node:21.6.1-slim
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD

# workflows and jobs
workflows:
  version: 2
  default:
    jobs:
      - npm_install
      - npm_build:
          requires:
            - npm_install
      - npm_lint:
          requires:
            - npm_build
      - npm_test:
          requires:
            - npm_build
      - checkpoint:
          requires:
            - npm_lint
            - npm_test
          filters:
            branches:
              only: main
      - npm_test_node18:
          requires:
            - checkpoint
      - npm_test_node20:
          requires:
            - checkpoint
      - npm_test_node21:
          requires:
            - checkpoint
      - npm_diff:
          requires:
            - checkpoint

jobs:
  checkpoint:
    executor:
      name: busybox
    steps:
      - run:
          name: ckeckpoint
          command: echo 'passed checkpoint'
  npm_install:
    executor:
      name: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - npm_install-v1-{{ checksum "~/project/package.json" }}
            - npm_install-v1
      - command-npm_install:
          context: .
      - save_cache:
          key: npm_install-v1-{{ checksum "~/project/package.json" }}
          paths:
            - ~/.npm
            - ~/project/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
  npm_build:
    executor:
      name: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: build:ci
          context: .
      - persist_to_workspace:
          root: ~/project
          paths:
            - .dist
            - .types
  npm_lint:
    executor:
      name: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: lint
          context: .
  npm_test:
    executor:
      name: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: test-coverage
          context: .
      - store_artifacts:
          path: ~/project/coverage/lcov-report
          destination: coverage
  npm_diff:
    executor:
      name: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: build:diff
          context: .
  npm_test_node18:
    executor:
      name: node18
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: test
          context: .
  npm_test_node20:
    executor:
      name: node20
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: test
          context: .
  npm_test_node21:
    executor:
      name: node21
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - command-npm_run_script:
          task: test
          context: .

# commands
commands:
  command-npm_install:
    parameters:
      option:
        type: string
        default: ""
      context:
        type: string
    steps:
      - run:
          name: export environment variables
          command: |
            echo 'export NPM_PREFIX="${CIRCLE_WORKING_DIRECTORY}/<< parameters.context >>"' >> $BASH_ENV
      - run:
          name: npm install
          command: |
            npm --prefix ${NPM_PREFIX} install << parameters.option >>
  command-npm_run_script:
    parameters:
      task:
        type: string
      context:
        type: string
    steps:
      - run:
          name: export environment variables
          command: |
            echo 'export NPM_PREFIX="${CIRCLE_WORKING_DIRECTORY}/<< parameters.context >>"' >> $BASH_ENV
      - run:
          name: npm run-script
          command: |
            npm --prefix ${NPM_PREFIX} run-script << parameters.task >>
